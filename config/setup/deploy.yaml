apiVersion: v1
kind: ServiceAccount
metadata:
  name: yurt-user-controller-controller-manager
  namespace: yurt-user-controller-system
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: Role
#metadata:
#  name: yurt-user-controller-leader-election-role
#  namespace: yurt-user-controller-system
#rules:
#- apiGroups:
#  - ""
#  resources:
#  - configmaps
#  verbs:
#  - get
#  - list
#  - watch
#  - create
#  - update
#  - patch
#  - delete
#- apiGroups:
#  - coordination.k8s.io
#  resources:
#  - leases
#  verbs:
#  - get
#  - list
#  - watch
#  - create
#  - update
#  - patch
#  - delete
#- apiGroups:
#  - ""
#  resources:
#  - events
#  verbs:
#  - create
#  - patch
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRole
#metadata:
#  creationTimestamp: null
#  name: yurt-user-controller-manager-role
#rules:
#- apiGroups:
#  - user.openyurt.io
#  resources:
#  - users
#  verbs:
#  - create
#  - delete
#  - get
#  - list
#  - patch
#  - update
#  - watch
#- apiGroups:
#  - user.openyurt.io
#  resources:
#  - users/finalizers
#  verbs:
#  - update
#- apiGroups:
#  - user.openyurt.io
#  resources:
#  - users/status
#  verbs:
#  - get
#  - patch
#  - update
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRole
#metadata:
#  name: yurt-user-controller-metrics-reader
#rules:
#- nonResourceURLs:
#  - /metrics
#  verbs:
#  - get
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRole
#metadata:
#  name: yurt-user-controller-proxy-role
#rules:
#- apiGroups:
#  - authentication.k8s.io
#  resources:
#  - tokenreviews
#  verbs:
#  - create
#- apiGroups:
#  - authorization.k8s.io
#  resources:
#  - subjectaccessreviews
#  verbs:
#  - create
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: RoleBinding
#metadata:
#  name: yurt-user-controller-leader-election-rolebinding
#  namespace: yurt-user-controller-system
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: Role
#  name: yurt-user-controller-leader-election-role
#subjects:
#- kind: ServiceAccount
#  name: yurt-user-controller-controller-manager
#  namespace: yurt-user-controller-system
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRoleBinding
#metadata:
#  name: yurt-user-controller-manager-rolebinding
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: ClusterRole
#  name: yurt-user-controller-manager-role
#subjects:
#- kind: ServiceAccount
#  name: yurt-user-controller-controller-manager
#  namespace: yurt-user-controller-system
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRoleBinding
#metadata:
#  name: yurt-user-controller-proxy-rolebinding
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: ClusterRole
#  name: yurt-user-controller-proxy-role
#subjects:
#- kind: ServiceAccount
#  name: yurt-user-controller-controller-manager
#  namespace: yurt-user-controller-system
#---
#apiVersion: v1
#data:
#  controller_manager_config.yaml: |
#    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
#    kind: ControllerManagerConfig
#    health:
#      healthProbeBindAddress: :8081
#    metrics:
#      bindAddress: 127.0.0.1:8080
#    webhook:
#      port: 9443
#    leaderElection:
#      leaderElect: true
#      resourceName: e83bdff8.openyurt.io
#kind: ConfigMap
#metadata:
#  name: yurt-user-controller-manager-config
#  namespace: yurt-user-controller-system
#---
#apiVersion: v1
#kind: Service
#metadata:
#  labels:
#    control-plane: controller-manager
#  name: yurt-user-controller-controller-manager-metrics-service
#  namespace: yurt-user-controller-system
#spec:
#  ports:
#  - name: https
#    port: 8443
#    targetPort: https
#  selector:
#    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: yurt-user-controller-controller-manager
  namespace: yurt-user-controller-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
#      - args:
#        - --secure-listen-address=0.0.0.0:8443
#        - --upstream=http://127.0.0.1:8080/
#        - --logtostderr=true
#        - --v=10
#        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
#        name: kube-rbac-proxy
#        ports:
#        - containerPort: 8443
#          name: https
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: yurt-user-controller:test
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: yurt-user-controller-controller-manager
      terminationGracePeriodSeconds: 10
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: default-cluster-admin
subjects:
  - kind: ServiceAccount
    name: yurt-user-controller-controller-manager
    namespace: yurt-user-controller-system
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: ""
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: openyurt-users
subjects:
  - kind: Group
    name: openyurt:users
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: ""
---
